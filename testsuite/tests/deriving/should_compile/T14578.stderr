
==================== Derived instances ====================
Derived class instances:
  instance (g @@ a, f @@ g a, GHC.Base.Applicative f,
            GHC.Base.Applicative g, GHC.Base.Semigroup a) =>
           GHC.Base.Semigroup (T14578.Wat f g a) where
    (GHC.Base.<>)
      = GHC.Prim.coerce
          @(T14578.App (Data.Functor.Compose.Compose f g) a
            -> T14578.App (Data.Functor.Compose.Compose f g) a
               -> T14578.App (Data.Functor.Compose.Compose f g) a)
          @(T14578.Wat f g a -> T14578.Wat f g a -> T14578.Wat f g a)
          ((GHC.Base.<>)
             @(T14578.App (Data.Functor.Compose.Compose f g) a)) ::
          T14578.Wat f g a -> T14578.Wat f g a -> T14578.Wat f g a
    GHC.Base.sconcat
      = GHC.Prim.coerce
          @(GHC.Base.NonEmpty (T14578.App (Data.Functor.Compose.Compose f g) a)
            -> T14578.App (Data.Functor.Compose.Compose f g) a)
          @(GHC.Base.NonEmpty (T14578.Wat f g a) -> T14578.Wat f g a)
          (GHC.Base.sconcat
             @(T14578.App (Data.Functor.Compose.Compose f g) a)) ::
          (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) GHC.Base.NonEmpty (T14578.Wat f g a) =>
          GHC.Base.NonEmpty (T14578.Wat f g a) -> T14578.Wat f g a
    GHC.Base.stimes
      = GHC.Prim.coerce
          @(b
            -> T14578.App (Data.Functor.Compose.Compose f g) a
               -> T14578.App (Data.Functor.Compose.Compose f g) a)
          @(b -> T14578.Wat f g a -> T14578.Wat f g a)
          (GHC.Base.stimes
             @(T14578.App (Data.Functor.Compose.Compose f g) a)) ::
          forall (b :: TYPE GHC.Types.LiftedRep).
          GHC.Real.Integral b => b -> T14578.Wat f g a -> T14578.Wat f g a
  
  instance GHC.Base.Functor f =>
           GHC.Base.Functor (T14578.App f) where
    GHC.Base.fmap
      = GHC.Prim.coerce
          @((a -> b) -> f a -> f b)
          @((a -> b) -> T14578.App f a -> T14578.App f b)
          (GHC.Base.fmap @f) ::
          forall (a :: TYPE GHC.Types.LiftedRep)
                 (b :: TYPE GHC.Types.LiftedRep).
          ((@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) b,
           (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) a) =>
          (a -> b) -> T14578.App f a -> T14578.App f b
    (GHC.Base.<$)
      = GHC.Prim.coerce
          @(a -> f b -> f a) @(a -> T14578.App f b -> T14578.App f a)
          ((GHC.Base.<$) @f) ::
          forall (a :: TYPE GHC.Types.LiftedRep)
                 (b :: TYPE GHC.Types.LiftedRep).
          ((@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) a,
           (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) b) =>
          a -> T14578.App f b -> T14578.App f a
  
  instance GHC.Base.Applicative f =>
           GHC.Base.Applicative (T14578.App f) where
    GHC.Base.pure
      = GHC.Prim.coerce
          @(a -> f a) @(a -> T14578.App f a) (GHC.Base.pure @f) ::
          forall (a :: TYPE GHC.Types.LiftedRep).
          (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) a =>
          a -> T14578.App f a
    (GHC.Base.<*>)
      = GHC.Prim.coerce
          @(f (a -> b) -> f a -> f b)
          @(T14578.App f (a -> b) -> T14578.App f a -> T14578.App f b)
          ((GHC.Base.<*>) @f) ::
          forall (a :: TYPE GHC.Types.LiftedRep)
                 (b :: TYPE GHC.Types.LiftedRep).
          ((@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) (a
                                                                                        -> b),
           (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) b,
           (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) a) =>
          T14578.App f (a -> b) -> T14578.App f a -> T14578.App f b
    GHC.Base.liftA2
      = GHC.Prim.coerce
          @((a -> b -> c) -> f a -> f b -> f c)
          @((a -> b -> c)
            -> T14578.App f a -> T14578.App f b -> T14578.App f c)
          (GHC.Base.liftA2 @f) ::
          forall (a :: TYPE GHC.Types.LiftedRep)
                 (b :: TYPE GHC.Types.LiftedRep)
                 (c :: TYPE GHC.Types.LiftedRep).
          ((@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) b,
           (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) c,
           (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) a) =>
          (a -> b -> c) -> T14578.App f a -> T14578.App f b -> T14578.App f c
    (GHC.Base.*>)
      = GHC.Prim.coerce
          @(f a -> f b -> f b)
          @(T14578.App f a -> T14578.App f b -> T14578.App f b)
          ((GHC.Base.*>) @f) ::
          forall (b :: TYPE GHC.Types.LiftedRep)
                 (a :: TYPE GHC.Types.LiftedRep).
          ((@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) a,
           (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) b,
           (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) (b
                                                                                        -> b)) =>
          T14578.App f a -> T14578.App f b -> T14578.App f b
    (GHC.Base.<*)
      = GHC.Prim.coerce
          @(f a -> f b -> f a)
          @(T14578.App f a -> T14578.App f b -> T14578.App f a)
          ((GHC.Base.<*) @f) ::
          forall (b :: TYPE GHC.Types.LiftedRep)
                 (a :: TYPE GHC.Types.LiftedRep).
          ((@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) a,
           (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) b,
           (@@) @(TYPE GHC.Types.LiftedRep) @(TYPE GHC.Types.LiftedRep) (T14578.App f) (b
                                                                                        -> a)) =>
          T14578.App f a -> T14578.App f b -> T14578.App f a
  

Derived type family instances:



==================== Filling in method body ====================
GHC.Base.Semigroup [T14578.App f[ssk:1] a[ssk:1]]
  GHC.Base.sconcat = GHC.Base.$dmsconcat
                       @(T14578.App f[ssk:1] a[ssk:1])



==================== Filling in method body ====================
GHC.Base.Semigroup [T14578.App f[ssk:1] a[ssk:1]]
  GHC.Base.stimes = GHC.Base.$dmstimes
                      @(T14578.App f[ssk:1] a[ssk:1])



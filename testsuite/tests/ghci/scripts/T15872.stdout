MkFun :: (a -> b) -> Fun a b
Fun :: (a ~ 'OP) => * -> * -> *
type Fun :: forall (a :: WHICH). (a ~ 'OP) => * -> * -> *
data Fun b c where
  MkFun :: (b -> c) -> Fun b c
  	-- Defined at T15872.hs:11:1
type instance forall (a1 :: WHICH) (a2 :: a1 ~ 'OP) b c. Fun b @@ c
  = () :: Constraint
  	-- Defined at T15872.hs:11:1
type instance forall (a1 :: WHICH) (a2 :: a1 ~ 'OP) b. Fun @@ b
  = () :: Constraint
  	-- Defined at T15872.hs:11:1
MkFun
  :: (a -> b) -> Fun @'OP @{'GHC.Types.Eq# @WHICH @'OP @'OP <>} a b
Fun :: ((a :: WHICH) ~ ('OP :: WHICH)) => * -> * -> *
type role Fun nominal nominal representational representational
type Fun :: forall (a :: WHICH).
            ((a :: WHICH) ~ ('OP :: WHICH)) =>
            * -> * -> *
data Fun @a @{a1} b c where
  MkFun :: (b -> c)
           -> Fun @'OP @{'GHC.Types.Eq# @WHICH @'OP @'OP <>} b c
  	-- Defined at T15872.hs:11:1
type instance forall (a1 :: WHICH)
                     (a2 :: (a1 :: WHICH) ~ ('OP :: WHICH)) b c. (@@)
                                                                   @(* -> *) @* (Fun @a1 @{a2} b) c
  = () :: Constraint
  	-- Defined at T15872.hs:11:1
type instance forall (a1 :: WHICH)
                     (a2 :: (a1 :: WHICH) ~ ('OP :: WHICH)) b. (@@)
                                                                 @(* -> * -> *) @* (Fun @a1 @{a2}) b
  = () :: Constraint
  	-- Defined at T15872.hs:11:1

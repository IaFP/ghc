TYPE SIGNATURES
  empty :: forall c. Coll c => c
  emptyL :: forall a. (ListColl @ a) => ListColl a
  insert :: forall c. (Coll c, $wf:Elem c) => Elem c -> c -> c
  test2 ::
    forall {c} {a} {b}.
    (Elem c ~ (a, b), $wf:Elem c, Coll c, Num a, Num b) =>
    c -> c
TYPE CONSTRUCTORS
  associated type family $wf:Elem{1} :: * -> Constraint
    roles nominal
  class Coll{1} :: * -> Constraint
  associated type family Elem{1} :: * -> *
    roles nominal
  data type ListColl{1} :: * -> *
COERCION AXIOMS
  axiom Foo.D:R:ElemListColl :: Elem (ListColl a) = a
  axiom Foo.R:$wf:ElemListColl ::
      $wf:Elem (ListColl a) = () :: Constraint
DATA CONSTRUCTORS
  L :: forall a. [a] -> ListColl a
CLASS INSTANCES
  instance Coll (ListColl a) -- Defined at T3017.hs:12:11
FAMILY INSTANCES
  type instance $wf:Elem (ListColl a) = () :: Constraint
                  -- Defined at T3017.hs:13:9
  type instance Elem (ListColl a) = a -- Defined at T3017.hs:13:9
  type instance ListColl @ a = () :: Constraint
                  -- Defined at T3017.hs:11:2
Dependent modules: []
Dependent packages: [base-4.16.0.0]

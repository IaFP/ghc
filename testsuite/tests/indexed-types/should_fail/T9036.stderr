
T9036.hs:18:17: error:
    • Could not deduce: GetMonad t0 ~ GetMonad t
      from the context: GetMonad t @@ after
        bound by the type signature for:
                   simpleLogger :: forall t after.
                                   (GetMonad t @@ after) =>
                                   Maybe (GetMonad t after) -> Curried t [t]
        at T9036.hs:18:17-59
      Expected type: Maybe (GetMonad t after) -> Curried t [t]
        Actual type: Maybe (GetMonad t0 after) -> Curried t0 [t0]
      NB: ‘GetMonad’ is a non-injective type family
      The type variable ‘t0’ is ambiguous
    • In the ambiguity check for ‘simpleLogger’
      To defer the ambiguity check to use sites, enable AllowAmbiguousTypes
      In the type signature:
        simpleLogger :: Maybe (GetMonad t after) -> t `Curried` [t]

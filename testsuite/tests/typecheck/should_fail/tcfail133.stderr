
tcfail133.hs:68:7: error:
    • Ambiguous type variable ‘a0’ arising from a use of ‘show’
      prevents the constraint ‘(Show a0)’ from being solved.
      Probable fix: use a type annotation to specify what ‘a0’ should be.
      These potential instances exist:
        instance (Show a, Show b) => Show (Either a b)
          -- Defined in ‘Data.Either’
        instance Show Ordering -- Defined in ‘GHC.Show’
        instance Show Integer -- Defined in ‘GHC.Show’
        ...plus 26 others
        ...plus 78 instances involving out-of-scope types
        (use -fprint-potential-instances to see them all)
    • In the expression: show $ add (One :@ Zero) (One :@ One)
      In an equation for ‘foo’:
          foo = show $ add (One :@ Zero) (One :@ One)

tcfail133.hs:68:14: error:
    • No instance for (AddDigit (Zero :@ (One :@ One)) One a0)
        arising from a use of ‘add’
    • In the second argument of ‘($)’, namely
        ‘add (One :@ Zero) (One :@ One)’
      In the expression: show $ add (One :@ Zero) (One :@ One)
      In an equation for ‘foo’:
          foo = show $ add (One :@ Zero) (One :@ One)

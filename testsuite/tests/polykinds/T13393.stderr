
T13393.hs:61:3: error:
    • Could not deduce: (t0 @@ b0, t0 @@ EncodeResult,
                         t0 @@ RWST Int () (AacEncSt rate channels codec) IO b0)
        arising from a use of ‘mapM’
      from the context: (RWST Int () (AacEncSt rate channels codec) IO
                         @@ Either EncodeFailure (Maybe (Audio rate channels (Aac codec))),
                         RWST Int () @@ AacEncSt rate channels codec, RWST @@ Int,
                         RWST Int @@ (), RWST Int () (AacEncSt rate channels codec) @@ IO,
                         AacEncSt rate channels @@ codec, AacEncSt @@ rate,
                         AacEncSt rate @@ channels, Aac @@ codec, Audio rate @@ channels,
                         Audio @@ rate, Audio rate channels @@ Aac codec,
                         Either EncodeFailure @@ Maybe (Audio rate channels (Aac codec)),
                         Either @@ EncodeFailure)
        bound by the type signature for:
                   encodeLinearToAac :: forall (rate :: Rate) channels
                                               (codec :: AacCodec).
                                        (RWST Int () (AacEncSt rate channels codec) IO
                                         @@ Either
                                              EncodeFailure
                                              (Maybe (Audio rate channels (Aac codec))),
                                         RWST Int () @@ AacEncSt rate channels codec, RWST @@ Int,
                                         RWST Int @@ (),
                                         RWST Int () (AacEncSt rate channels codec) @@ IO,
                                         AacEncSt rate channels @@ codec, AacEncSt @@ rate,
                                         AacEncSt rate @@ channels, Aac @@ codec,
                                         Audio rate @@ channels, Audio @@ rate,
                                         Audio rate channels @@ Aac codec,
                                         Either EncodeFailure
                                         @@ Maybe (Audio rate channels (Aac codec)),
                                         Either @@ EncodeFailure) =>
                                        AacEncT
                                          rate
                                          channels
                                          codec
                                          IO
                                          (Either
                                             EncodeFailure
                                             (Maybe (Audio rate channels (Aac codec))))
        at T13393.hs:(58,1)-(59,100)
    • In a stmt of a 'do' block:
        mapM putBackLeftOverInputAndReturnOutput undefined
      In the expression:
        do mapM putBackLeftOverInputAndReturnOutput undefined
           undefined
      In an equation for ‘encodeLinearToAac’:
          encodeLinearToAac
            = do mapM putBackLeftOverInputAndReturnOutput undefined
                 undefined
            where
                putBackLeftOverInputAndReturnOutput (MkEncodeResult x)
                  = do leftOvers .= x
                       ....

T13393.hs:61:3: error:
    • Could not deduce (Traversable t0) arising from a use of ‘mapM’
      from the context: (RWST Int () (AacEncSt rate channels codec) IO
                         @@ Either EncodeFailure (Maybe (Audio rate channels (Aac codec))),
                         RWST Int () @@ AacEncSt rate channels codec, RWST @@ Int,
                         RWST Int @@ (), RWST Int () (AacEncSt rate channels codec) @@ IO,
                         AacEncSt rate channels @@ codec, AacEncSt @@ rate,
                         AacEncSt rate @@ channels, Aac @@ codec, Audio rate @@ channels,
                         Audio @@ rate, Audio rate channels @@ Aac codec,
                         Either EncodeFailure @@ Maybe (Audio rate channels (Aac codec)),
                         Either @@ EncodeFailure)
        bound by the type signature for:
                   encodeLinearToAac :: forall (rate :: Rate) channels
                                               (codec :: AacCodec).
                                        (RWST Int () (AacEncSt rate channels codec) IO
                                         @@ Either
                                              EncodeFailure
                                              (Maybe (Audio rate channels (Aac codec))),
                                         RWST Int () @@ AacEncSt rate channels codec, RWST @@ Int,
                                         RWST Int @@ (),
                                         RWST Int () (AacEncSt rate channels codec) @@ IO,
                                         AacEncSt rate channels @@ codec, AacEncSt @@ rate,
                                         AacEncSt rate @@ channels, Aac @@ codec,
                                         Audio rate @@ channels, Audio @@ rate,
                                         Audio rate channels @@ Aac codec,
                                         Either EncodeFailure
                                         @@ Maybe (Audio rate channels (Aac codec)),
                                         Either @@ EncodeFailure) =>
                                        AacEncT
                                          rate
                                          channels
                                          codec
                                          IO
                                          (Either
                                             EncodeFailure
                                             (Maybe (Audio rate channels (Aac codec))))
        at T13393.hs:(58,1)-(59,100)
      The type variable ‘t0’ is ambiguous
      These potential instances exist:
        instance Traversable (Either a) -- Defined in ‘Data.Traversable’
        instance Traversable Identity -- Defined in ‘Data.Traversable’
        instance Traversable Maybe -- Defined in ‘Data.Traversable’
        ...plus two others
        ...plus 29 instances involving out-of-scope types
        (use -fprint-potential-instances to see them all)
    • In a stmt of a 'do' block:
        mapM putBackLeftOverInputAndReturnOutput undefined
      In the expression:
        do mapM putBackLeftOverInputAndReturnOutput undefined
           undefined
      In an equation for ‘encodeLinearToAac’:
          encodeLinearToAac
            = do mapM putBackLeftOverInputAndReturnOutput undefined
                 undefined
            where
                putBackLeftOverInputAndReturnOutput (MkEncodeResult x)
                  = do leftOvers .= x
                       ....
